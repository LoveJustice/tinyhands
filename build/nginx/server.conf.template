server {
    listen 80;
    server_name     ${OLD_SITE_HOSTNAME};
    
    location /.well-known/acme-challenge/ {
	    root /var/www/certbot;
	}
	
    location / {
        rewrite     ^ https://${SITE_HOSTNAME}$request_uri permanent;
    }
}

server {
    listen          80;
    server_name     ${SITE_HOSTNAME};
    
    location /.well-known/acme-challenge/ {
	    root /var/www/certbot;
	}
    
    location / {
        rewrite     ^ https://$server_name$request_uri permanent;
    }
}

server {
    server_name ${SITE_HOSTNAME};
    listen 443 default_server ssl;

    root /data;
    access_log /log/nginx_access.log;
    error_log /log/nginx_error.log debug;

    ssl_certificate_key ${SSL_KEY_PATH};
    ssl_certificate ${SSL_CERT_PATH};

    client_max_body_size 100m;

    location /favicon.ico {
        alias /data/dreamsuite/static/images/favicon.ico;
    }

    location /bower_components/bootstrap/fonts/ {
        alias /data/dist/fonts/;
    }

    location /static/ {
        alias /data/dreamsuite/static/;
    }
    
    location /public/ {
    	alias /data/public/;
    }

    location /media/ {
    	auth_request /auth;
        alias /data/media/;
    }
    
    location /auth {
    	internal;
	    proxy_pass              http://web:9001;
	    proxy_pass_request_body off;
	    proxy_set_header        Content-Length "";
	    proxy_set_header Authorization "Bearer ${cookie_file_access_token}";
    }

    # react static js, css, image assets
    location /re/assets/ {
    	# Yes cache this
    	alias /data/react_dist/assets/;
    }

    location /re/ {
    	alias /data/react_dist/;

        # Don't cache index.html
        # https://stackoverflow.com/a/56436590/13815107
        add_header Cache-Control "private, no-store, no-cache";

        # Without this, react router routes will 404.
        #  Try to find the files in the above alias (which will work for .css, .js. html
        #  But if you can't, like for /my-page, rout to /index.html and let react router handle it
        # https://stackoverflow.com/q/43951720
        #  TODO use a more robust solution like the ones in the StackOverflow comments
        try_files $uri /re/index.html;
    }

    location / {
        alias /data/dist/;
    }

    location /robots.txt {
        alias /robots.txt;
    }



    # This is the same as the below block but with an additional Authorization header
    # This is because the Authentication header does not get passed when opening a url directly
    # so we need to do special authentication using a cookie
    # ORDER MATTERS, this must be before the other regex with 'api' in it
    location ~ ^/(api/staff/csv|api/forms/csv|cloud-media)/ {
	    # Only difference from the block below this
	    proxy_set_header Authorization "Bearer ${cookie_file_access_token}";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_pass http://web:9001;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

	location ~ ^/(data-entry|api|login|logout|interceptee_fuzzy_matching|admin)/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_pass http://web:9001;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
	}


}
