server {
    listen 80;
    server_name     ${OLD_SITE_HOSTNAME};
    
    location /.well-known/acme-challenge/ {
	    root /var/www/certbot;
	}
	
    location / {
        rewrite     ^ https://${SITE_HOSTNAME}$request_uri permanent;
    }
}

server {
    listen          80;
    server_name     ${SITE_HOSTNAME};
    
    location /.well-known/acme-challenge/ {
	    root /var/www/certbot;
	}
    
    location / {
        rewrite     ^ https://$server_name$request_uri permanent;
    }

    location /re/ {
        proxy_pass ${REACT_CLIENT_DOMAIN};  # React app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    server_name ${SITE_HOSTNAME};
    listen 443 default_server ssl;

    root /data;
    access_log /log/nginx_access.log;
    error_log /log/nginx_error.log debug;

    ssl_certificate_key ${SSL_KEY_PATH};
    ssl_certificate ${SSL_CERT_PATH};

    client_max_body_size 100m;

    location /favicon.ico {
        alias /data/dreamsuite/static/images/favicon.ico;
    }

    location /bower_components/bootstrap/fonts/ {
        alias /data/dist/fonts/;
    }

    location /static/ {
        alias /data/dreamsuite/static/;
    }
    
    location /public/ {
    	alias /data/public/;
    }

    location /media/ {
    	auth_request /auth;
        alias /data/media/;
    }
    
    location /auth {
    	internal;
	    proxy_pass              http://web:9001;
	    proxy_pass_request_body off;
	    proxy_set_header        Content-Length "";
	    proxy_set_header Authorization "Bearer ${cookie_file_access_token}";
    }

    location / {
        alias /data/dist/;
    }

    location /robots.txt {
        alias /robots.txt;
    }

	location ~ ^/(data-entry|api|login|logout|interceptee_fuzzy_matching|admin)/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_pass http://web:9001;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
	}


}
