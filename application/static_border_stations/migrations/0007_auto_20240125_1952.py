# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2024-01-25 14:07
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion

def populate_staff_totals(apps, schema_editor):
    mod = __import__('static_border_stations.models', fromlist=['Staff'])
    staff_class = getattr(mod, 'Staff', None)
    staff_class.set_all_totals()

class Migration(migrations.Migration):

    dependencies = [
        ('dataentry', '0258_auto_20230509_1844'),
        ('static_border_stations', '0006_auto_20230509_1733'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(blank=True, default='', upload_to='staff_attachment')),
                ('option', models.CharField(max_length=126, null=True)),
                ('attach_date', models.DateField(auto_now_add=True)),
                ('expiration_date', models.DateField(null=True)),
                ('description', models.CharField(max_length=126, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMiscellaneous',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMiscellaneousTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=127)),
                ('type', models.CharField(max_length=127)),
                ('choices', models.TextField(blank=True)),
                ('countries', models.ManyToManyField(to='dataentry.Country')),
            ],
        ),
        migrations.CreateModel(
            name='StaffReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('networking', models.FloatField(null=True)),
                ('compliance', models.FloatField(null=True)),
                ('dependability', models.FloatField(null=True)),
                ('alertness', models.FloatField(null=True)),
                ('boldness', models.FloatField(null=True)),
                ('questioning', models.FloatField(null=True)),
                ('teamwork', models.FloatField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='committeemember',
            name='member_projects',
            field=models.ManyToManyField(related_name='member_projects', to='dataentry.BorderStation'),
        ),
        migrations.AddField(
            model_name='committeemember',
            name='misconduct_agreement',
            field=models.ImageField(blank=True, default='', upload_to='committee/misconduct'),
        ),
        migrations.AddField(
            model_name='committeemember',
            name='sc_agreement',
            field=models.ImageField(blank=True, default='', upload_to='committee/sc_agreement'),
        ),
        migrations.AddField(
            model_name='staff',
            name='accounting',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='awareness',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='birth_date',
            field=models.CharField(blank=True, max_length=127),
        ),
        migrations.AddField(
            model_name='staff',
            name='education',
            field=models.CharField(max_length=127, null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='general',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='id_card_expiration',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='last_month_local',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=17),
        ),
        migrations.AddField(
            model_name='staff',
            name='last_month_usd',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=17),
        ),
        migrations.AddField(
            model_name='staff',
            name='paralegal',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='pv_care',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='records',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='security',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='shelter',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='staff',
            name='twelve_month_local',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=17),
        ),
        migrations.AddField(
            model_name='staff',
            name='twelve_month_usd',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=17),
        ),
        migrations.AddField(
            model_name='staffreview',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='static_border_stations.Staff'),
        ),
        migrations.AddField(
            model_name='staffmiscellaneous',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='static_border_stations.Staff'),
        ),
        migrations.AddField(
            model_name='staffmiscellaneous',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='static_border_stations.StaffMiscellaneousTypes'),
        ),
        migrations.AddField(
            model_name='staffattachment',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='static_border_stations.Staff'),
        ),
        
        migrations.RunSQL("update dataentry_permission set action='VIEW_BASIC', min_level='PROJECT' where permission_group = 'STAFF' and action='VIEW'"),
        migrations.RunSQL("update dataentry_permission set action='EDIT_BASIC', min_level='PROJECT' where permission_group = 'STAFF' and action='EDIT'"), 
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('STAFF','VIEW_REVIEW','PROJECT',3)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('STAFF','EDIT_REVIEW','PROJECT',4)"),
        migrations.RunSQL("update dataentry_permission set display_order=5, min_level='PROJECT' where permission_group = 'STAFF' and action='ADD'"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('STAFF','VIEW_CONTRACT','PROJECT',6)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('STAFF','EDIT_CONTRACT','PROJECT',7)"),
        migrations.RunSQL("update dataentry_permission set display_order=8 where permission_group = 'STAFF' and action='DELETE'"),
        
        migrations.RunSQL("insert into dataentry_userlocationpermission (account_id, country_id, station_id, permission_id) "\
                            "select du.account_id, du.country_id, du.station_id, dp2.id "\
                          "from dataentry_userlocationpermission du, dataentry_permission dp2 "\
                          "where du.permission_id = (select id from dataentry_permission dp where dp.permission_group='STAFF' and action='ADD') "\
                          "and dp2.permission_group='STAFF' and action='VIEW_REVIEW'"),
        migrations.RunSQL("insert into dataentry_userlocationpermission (account_id, country_id, station_id, permission_id) "\
                            "select du.account_id, du.country_id, du.station_id, dp2.id "\
                          "from dataentry_userlocationpermission du, dataentry_permission dp2 "\
                          "where du.permission_id = (select id from dataentry_permission dp where dp.permission_group='STAFF' and action='ADD') "\
                          "and dp2.permission_group='STAFF' and action='EDIT_REVIEW'"),
        migrations.RunSQL("insert into dataentry_userlocationpermission (account_id, country_id, station_id, permission_id) "\
                            "select du.account_id, du.country_id, du.station_id, dp2.id "\
                          "from dataentry_userlocationpermission du, dataentry_permission dp2 "\
                          "where du.permission_id = (select id from dataentry_permission dp where dp.permission_group='STAFF' and action='DELETE') "\
                          "and dp2.permission_group='STAFF' and action='VIEW_CONTRACT'"),
        migrations.RunSQL("insert into dataentry_userlocationpermission (account_id, country_id, station_id, permission_id) "\
                            "select du.account_id, du.country_id, du.station_id, dp2.id "\
                          "from dataentry_userlocationpermission du, dataentry_permission dp2 "\
                          "where du.permission_id = (select id from dataentry_permission dp where dp.permission_group='STAFF' and action='DELETE') "\
                          "and dp2.permission_group='STAFF' and action='EDIT_CONTRACT'"),
        
        migrations.RunSQL("insert into static_border_stations_committeemember_member_projects (committeemember_id, borderstation_id) "\
                          "select id, border_station_id from static_border_stations_committeemember where border_station_id is not null"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','VIEW_BASIC','COUNTRY',1)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','EDIT_BASIC','COUNTRY',2)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','ADD','COUNTRY',3)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','VIEW_CONTRACT','COUNTRY',4)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','EDIT_CONTRACT','COUNTRY',5)"),
        migrations.RunSQL("insert into dataentry_permission (permission_group, action, min_level, display_order)  values ('SUBCOMMITTEE','DELETE','COUNTRY',6)"),
        migrations.RunSQL("update static_border_stations_committeemember "\
                          "set country_id = (select operating_country_id from dataentry_borderstation db where db.id = border_station_id) "\
                          "where border_station_id is not null"),
        
        migrations.RunPython(populate_staff_totals),
    ]
