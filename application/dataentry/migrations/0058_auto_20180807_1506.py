# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-08-07 15:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from dataentry.models.form_migration import FormMigration

FormMigration.fixture_filename = 'form_data_20180807.json'

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dataentry', '0057_auto_20180730_1616'),
    ]

    operations = [
        migrations.CreateModel(
            name='IntercepteeBangladesh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='interceptee_photos')),
                ('kind', models.CharField(choices=[('v', 'Victim'), ('t', 'Trafficker'), ('u', 'Unknown')], max_length=4)),
                ('relation_to', models.CharField(blank=True, max_length=255)),
                ('trafficker_taken_into_custody', models.BooleanField(default=False, verbose_name='taken_into_custody')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IrfBangladesh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=20, verbose_name='Status')),
                ('date_time_entered_into_system', models.DateTimeField(auto_now_add=True)),
                ('date_time_last_updated', models.DateTimeField(auto_now=True)),
                ('irf_number', models.CharField(max_length=20, unique=True, verbose_name='IRF #:')),
                ('number_of_victims', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of victims:')),
                ('location', models.CharField(max_length=255, verbose_name='Location:')),
                ('date_time_of_interception', models.DateTimeField(verbose_name='Date/Time:')),
                ('number_of_traffickers', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of traffickers')),
                ('staff_name', models.CharField(max_length=255, verbose_name='Staff Name:')),
                ('drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Girl appears drugged or drowsy')),
                ('who_in_group_husbandwife', models.BooleanField(default=False, verbose_name='Husband / Wife')),
                ('married_in_past_2_weeks', models.BooleanField(default=False, verbose_name='Married in the past 2 weeks')),
                ('married_in_past_2_8_weeks', models.BooleanField(default=False, verbose_name='Married within the past 2-8 weeks')),
                ('caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in a lie or contradiction')),
                ('other_red_flag', models.CharField(blank=True, max_length=255)),
                ('where_going_destination', models.CharField(blank=True, max_length=126, verbose_name='Location:')),
                ('where_going_job', models.BooleanField(default=False, verbose_name='Job')),
                ('passport_with_broker', models.BooleanField(default=False, verbose_name='Passport is with a broker')),
                ('job_too_good_to_be_true', models.BooleanField(default=False, verbose_name='Job is too good to be true')),
                ('not_real_job', models.BooleanField(default=False, verbose_name='Not a real job')),
                ('couldnt_confirm_job', models.BooleanField(default=False, verbose_name='Could not confirm job')),
                ('where_going_study', models.BooleanField(default=False, verbose_name='Study')),
                ('no_enrollment_docs', models.BooleanField(default=False, verbose_name='No documentation of enrollment')),
                ('doesnt_know_school_name', models.BooleanField(default=False, verbose_name="Does not Know School's Name and location")),
                ('no_school_phone', models.BooleanField(default=False, verbose_name='No phone number for School')),
                ('not_enrolled_in_school', models.BooleanField(default=False, verbose_name='Not enrolled in school')),
                ('where_runaway', models.BooleanField(default=False, verbose_name='Runaway')),
                ('running_away_over_18', models.BooleanField(default=False, verbose_name='Running away from home (18 years or older)')),
                ('running_away_under_18', models.BooleanField(default=False, verbose_name='Running away from home (under 18 years old)')),
                ('reluctant_family_info', models.BooleanField(default=False, verbose_name='Reluctant to give family info')),
                ('refuses_family_info', models.BooleanField(default=False, verbose_name='Will not give family info')),
                ('under_18_cant_contact_family', models.BooleanField(default=False, verbose_name='No family contact established')),
                ('under_18_family_doesnt_know', models.BooleanField(default=False, verbose_name="Family doesn't know she is going to India")),
                ('under_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family unwilling to let her go')),
                ('talked_to_family_member', models.CharField(blank=True, max_length=127)),
                ('reported_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Reported Total Red Flag Points:')),
                ('computed_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Computed Total Red Flag Points:')),
                ('who_noticed', models.CharField(max_length=127, null=True)),
                ('staff_who_noticed', models.CharField(blank=True, max_length=255, verbose_name='Staff who noticed:')),
                ('type_of_intercept', models.CharField(max_length=127, null=True)),
                ('how_sure_was_trafficking', models.IntegerField(choices=[(1, '1 - Not at all sure'), (2, '2 - Unsure but suspects it'), (3, '3 - Somewhat sure'), (4, '4 - Very sure'), (5, '5 - Absolutely sure')], null=True, verbose_name='How sure are you that it was trafficking case?')),
                ('convinced_by_staff', models.CharField(default='False', max_length=127)),
                ('convinced_by_family', models.CharField(default='False', max_length=127)),
                ('convinced_by_police', models.CharField(default='False', max_length=127)),
                ('has_signature', models.BooleanField(default=False, verbose_name='Scanned form has signature?')),
                ('who_in_group_alone', models.BooleanField(default=False, verbose_name='Alone')),
                ('who_in_group_relative', models.BooleanField(default=False, verbose_name='Own brother, sister / relative')),
                ('less_than_2_weeks_before_eloping', models.BooleanField(default=False, verbose_name='Less than 2 weeks before eloping')),
                ('between_2_12_weeks_before_eloping', models.BooleanField(default=False, verbose_name='2-12 weeks before eloping')),
                ('caste_not_same_as_relative', models.BooleanField(default=False, verbose_name='Caste not the same as alleged relative')),
                ('waiting_likely_trafficker', models.BooleanField(default=False, verbose_name='Waiting for someone who fits description of trafficker')),
                ('group_wife_girl_nepali_bengali', models.BooleanField(default=False, verbose_name='Wife/girl is Nepali/Bengali')),
                ('where_going_border_area', models.BooleanField(default=False, verbose_name='Border Area')),
                ('where_going_india', models.BooleanField(default=False, verbose_name='India')),
                ('where_going_middle_east', models.BooleanField(default=False, verbose_name='Middle East')),
                ('where_going_dont_know', models.BooleanField(default=False, verbose_name="Don't know")),
                ('where_going_other', models.CharField(default='False', max_length=127, verbose_name='Other')),
                ('purpose_for_going_other', models.CharField(default='False', max_length=127, verbose_name='Other')),
                ('no_address_at_destination', models.BooleanField(default=False, verbose_name='No address at destination')),
                ('no_company_phone', models.BooleanField(default=False, verbose_name='No company phone number')),
                ('no_appointment_letter', models.BooleanField(default=False, verbose_name='No Appointment Letter')),
                ('valid_gulf_country_visa', models.BooleanField(default=False, verbose_name='Has a valid gulf country visa in passport')),
                ('known_place_bangladesh', models.BooleanField(default=False, verbose_name='Known place in Bangladesh')),
                ('heading_for_border', models.BooleanField(default=False, verbose_name='Heading for a border area')),
                ('doesnt_know_villiage_details', models.BooleanField(default=False, verbose_name="Doesn't know details about village")),
                ('reluctant_villiage_info', models.BooleanField(default=False, verbose_name='Reluctant to give info about village')),
                ('over_18_family_doesnt_know', models.BooleanField(default=False, verbose_name='Family members do not know they is going to India')),
                ('over_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family members unwilling to let them go')),
                ('which_contact', models.CharField(blank=True, max_length=127)),
                ('contact_paid', models.NullBooleanField()),
                ('contact_paid_how_much', models.CharField(blank=True, max_length=255, verbose_name='How much?')),
                ('noticed_hesitant', models.BooleanField(default=False, verbose_name='Hesitant')),
                ('noticed_nervous_or_afraid', models.BooleanField(default=False, verbose_name='Nervous or afraid')),
                ('noticed_hurrying', models.BooleanField(default=False, verbose_name='Hurrying')),
                ('noticed_drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Drugged or drowsy')),
                ('noticed_new_clothes', models.BooleanField(default=False, verbose_name='New clothes')),
                ('noticed_dirty_clothes', models.BooleanField(default=False, verbose_name='Dirty clothes')),
                ('noticed_carrying_full_bags', models.BooleanField(default=False, verbose_name='Carrying Full bags')),
                ('noticed_village_dress', models.BooleanField(default=False, verbose_name='Village Dress')),
                ('noticed_foreign_looking', models.BooleanField(default=False, verbose_name='Indian looking')),
                ('noticed_typical_village_look', models.BooleanField(default=False, verbose_name='Typical village look')),
                ('noticed_looked_like_agent', models.BooleanField(default=False, verbose_name='Looked like agent')),
                ('noticed_caste_difference', models.BooleanField(default=False, verbose_name='Caste difference')),
                ('noticed_young_looking', models.BooleanField(default=False, verbose_name='Young looking')),
                ('noticed_waiting_sitting', models.BooleanField(default=False, verbose_name='Waiting / sitting')),
                ('noticed_roaming_around', models.BooleanField(default=False, verbose_name='Roaming around')),
                ('noticed_exiting_vehicle', models.BooleanField(default=False, verbose_name='Exiting vehicle')),
                ('noticed_heading_to_vehicle', models.BooleanField(default=False, verbose_name='Heading to vehicle')),
                ('noticed_in_a_vehicle', models.BooleanField(default=False, verbose_name='In a vehicle')),
                ('noticed_in_a_rickshaw', models.BooleanField(default=False, verbose_name='In a rickshaw')),
                ('noticed_in_a_cart', models.BooleanField(default=False, verbose_name='In a cart')),
                ('noticed_carrying_a_baby', models.BooleanField(default=False, verbose_name='Carrying a baby')),
                ('noticed_on_the_phone', models.BooleanField(default=False, verbose_name='On the phone')),
                ('walking_to_border', models.BooleanField(default=False, verbose_name='Walking to border')),
                ('case_notes', models.TextField(blank=True, verbose_name='Case Notes')),
                ('scan_submit_og_same_day', models.BooleanField(default=False, verbose_name='Scan and submint OG the same day')),
                ('scanned_form', models.FileField(blank=True, default='', upload_to='scanned_irf_forms', verbose_name='Attach scanned copy of form (pdf or image)')),
                ('call_project_manager', models.BooleanField(default=False, verbose_name='Call Project Manager to confirm intercept')),
                ('form_entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='irfbangladesh_entered_by', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.BorderStation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='irfindia',
            name='case_notes',
            field=models.TextField(blank=True, verbose_name='Case Notes'),
        ),
        migrations.AddField(
            model_name='irfindia',
            name='going_to_gulf_through_india',
            field=models.BooleanField(default=False, verbose_name='Going to Gulf for work through India'),
        ),
        migrations.AddField(
            model_name='irfnepal',
            name='going_to_gulf_through_india',
            field=models.BooleanField(default=False, verbose_name='Going to Gulf for work through India'),
        ),
        migrations.AddField(
            model_name='intercepteebangladesh',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptees', to='dataentry.IrfBangladesh'),
        ),
        migrations.AddField(
            model_name='intercepteebangladesh',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Person'),
        ),
        #migrations.RunPython(FormMigration.migrate),  
    ]
