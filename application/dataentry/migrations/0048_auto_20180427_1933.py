# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-04-27 19:33
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dataentry', '0047_permission_enable_stations'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100000, null=True)),
                ('code', models.CharField(max_length=125, null=True)),
                ('params', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
            ],
        ),
        migrations.CreateModel(
            name='CardStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Export_Import_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('field_type', models.CharField(max_length=126)),
                ('export_name', models.CharField(max_length=126)),
                ('arguments_json', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ExportImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=126, null=True)),
                ('implement_class_name', models.CharField(max_length=126, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExportImportCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_position', models.PositiveIntegerField()),
                ('prefix', models.CharField(max_length=126)),
                ('max_instances', models.PositiveIntegerField()),
                ('card_export_import', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='export_import_card', to='dataentry.ExportImport')),
                ('export_import', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='export_import_base', to='dataentry.ExportImport')),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Country')),
            ],
        ),
        migrations.CreateModel(
            name='FormType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
            ],
        ),
        migrations.CreateModel(
            name='FormValidation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_warning_message', models.CharField(max_length=126)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Form')),
            ],
        ),
        migrations.CreateModel(
            name='FormValidationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
            ],
        ),
        migrations.CreateModel(
            name='FormValidationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FormValidationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=126)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_or_import', models.CharField(max_length=10)),
                ('spreadsheet_name', models.CharField(max_length=126)),
                ('sheet_name', models.CharField(max_length=126)),
                ('key_column', models.CharField(max_length=126)),
                ('import_status_column', models.CharField(max_length=126, null=True)),
                ('import_issue_column', models.CharField(max_length=126, null=True)),
                ('export_import', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.ExportImport')),
            ],
        ),
        migrations.CreateModel(
            name='IntercepteeIndia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='interceptee_photos')),
                ('kind', models.CharField(choices=[('v', 'Victim'), ('t', 'Trafficker'), ('u', 'Unknown')], max_length=4)),
                ('relation_to', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IntercepteeNepal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='interceptee_photos')),
                ('kind', models.CharField(choices=[('v', 'Victim'), ('t', 'Trafficker'), ('u', 'Unknown')], max_length=4)),
                ('relation_to', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IrfIndia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=10, verbose_name='Status')),
                ('date_time_entered_into_system', models.DateTimeField(auto_now_add=True)),
                ('date_time_last_updated', models.DateTimeField(auto_now=True)),
                ('irf_number', models.CharField(max_length=20, unique=True, verbose_name='IRF #:')),
                ('number_of_victims', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of victims:')),
                ('location', models.CharField(max_length=255, verbose_name='Location:')),
                ('date_time_of_interception', models.DateTimeField(verbose_name='Date/Time:')),
                ('number_of_traffickers', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of traffickers')),
                ('staff_name', models.CharField(max_length=255, verbose_name='Staff Name:')),
                ('drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Girl appears drugged or drowsy')),
                ('who_in_group_husbandwife', models.BooleanField(default=False, verbose_name='Husband / Wife')),
                ('married_in_past_2_weeks', models.BooleanField(default=False, verbose_name='Married in the past 2 weeks')),
                ('married_in_past_2_8_weeks', models.BooleanField(default=False, verbose_name='Married within the past 2-8 weeks')),
                ('caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in a lie or contradiction')),
                ('other_red_flag', models.CharField(blank=True, max_length=255)),
                ('where_going_destination', models.CharField(blank=True, max_length=126, verbose_name='Location:')),
                ('where_going_job', models.BooleanField(default=False, verbose_name='Job')),
                ('passport_with_broker', models.BooleanField(default=False, verbose_name='Passport is with a broker')),
                ('job_too_good_to_be_true', models.BooleanField(default=False, verbose_name='Job is too good to be true')),
                ('not_real_job', models.BooleanField(default=False, verbose_name='Not a real job')),
                ('couldnt_confirm_job', models.BooleanField(default=False, verbose_name='Could not confirm job')),
                ('where_going_study', models.BooleanField(default=False, verbose_name='Study')),
                ('no_enrollment_docs', models.BooleanField(default=False, verbose_name='No documentation of enrollment')),
                ('doesnt_know_school_name', models.BooleanField(default=False, verbose_name="Does not Know School's Name and location")),
                ('no_school_phone', models.BooleanField(default=False, verbose_name='No phone number for School')),
                ('not_enrolled_in_school', models.BooleanField(default=False, verbose_name='Not enrolled in school')),
                ('where_runaway', models.BooleanField(default=False, verbose_name='Runaway')),
                ('running_away_over_18', models.BooleanField(default=False, verbose_name='Running away from home (18 years or older)')),
                ('running_away_under_18', models.BooleanField(default=False, verbose_name='Running away from home (under 18 years old)')),
                ('reluctant_family_info', models.BooleanField(default=False, verbose_name='Reluctant to give family info')),
                ('refuses_family_info', models.BooleanField(default=False, verbose_name='Will not give family info')),
                ('under_18_cant_contact_family', models.BooleanField(default=False, verbose_name='No family contact established')),
                ('under_18_family_doesnt_know', models.BooleanField(default=False, verbose_name="Family doesn't know she is going to India")),
                ('under_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family unwilling to let her go')),
                ('talked_to_family_member', models.CharField(blank=True, max_length=127)),
                ('reported_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Reported Total Red Flag Points:')),
                ('computed_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Computed Total Red Flag Points:')),
                ('who_noticed', models.CharField(blank=True, max_length=127)),
                ('staff_who_noticed', models.CharField(blank=True, max_length=255, verbose_name='Staff who noticed:')),
                ('type_of_intercept', models.CharField(blank=True, max_length=127)),
                ('trafficker_taken_into_custody', models.CharField(blank=True, max_length=20, null=True)),
                ('how_sure_was_trafficking', models.IntegerField(choices=[(1, '1 - Not at all sure'), (2, '2 - Unsure but suspects it'), (3, '3 - Somewhat sure'), (4, '4 - Very sure'), (5, '5 - Absolutely sure')], verbose_name='How sure are you that it was trafficking case?')),
                ('convinced_by_staff', models.CharField(default='False', max_length=127)),
                ('convinced_by_family', models.CharField(default='False', max_length=127)),
                ('convinced_by_police', models.CharField(default='False', max_length=127)),
                ('has_signature', models.BooleanField(default=False, verbose_name='Scanned form has signature?')),
                ('who_in_group_alone', models.BooleanField(default=False, verbose_name='Alone')),
                ('who_in_group_relative', models.BooleanField(default=False, verbose_name='Own brother, sister / relative')),
                ('meeting_someone_across_border', models.BooleanField(default=False, verbose_name='Is meeting a someone just across border')),
                ('seen_in_last_month_in_nepal', models.BooleanField(default=False, verbose_name="Meeting someone she's seen in Nepal in the last month")),
                ('traveling_with_someone_not_with_them', models.BooleanField(default=False, verbose_name='Was travelling with someone not with them')),
                ('less_than_2_weeks_before_eloping', models.BooleanField(default=False, verbose_name='Less than 2 weeks before eloping')),
                ('between_2_12_weeks_before_eloping', models.BooleanField(default=False, verbose_name='2-12 weeks before eloping')),
                ('caste_not_same_as_relative', models.BooleanField(default=False, verbose_name='Caste not the same as alleged relative')),
                ('group_missed_call', models.BooleanField(default=False, verbose_name='Missed Call')),
                ('group_facebook', models.BooleanField(default=False, verbose_name='Facebook')),
                ('group_other_website', models.CharField(blank=True, max_length=127)),
                ('group_never_met_before', models.BooleanField(default=False, verbose_name="Meeting someone they haven't met before")),
                ('group_wife_girl_nepali_bengali', models.BooleanField(default=False, verbose_name='Wife/girl is Nepali/Bengali')),
                ('group_wife_girl_indian', models.BooleanField(default=False, verbose_name='Wife/girl is Indian under 18')),
                ('where_going_visit', models.BooleanField(default=False, verbose_name='Visit / Family / Returning Home')),
                ('where_going_shopping', models.BooleanField(default=False, verbose_name='Shopping')),
                ('where_going_doesnt_know', models.BooleanField(default=False, verbose_name="Doesn't know where they are going")),
                ('where_going_someone_paid_expenses', models.BooleanField(default=False, verbose_name='Someone (not a relative) paid their travel expenses')),
                ('where_going_dont_know_what_doing', models.BooleanField(default=False, verbose_name="Don't know the details of what they will be doing")),
                ('where_going_running_from_india', models.BooleanField(default=False, verbose_name='Running away from India (under 18)')),
                ('where_going_enticed', models.BooleanField(default=False, verbose_name='Someone enticed them to leave')),
                ('no_address_at_destination', models.BooleanField(default=False, verbose_name='No address at destination')),
                ('no_company_phone', models.BooleanField(default=False, verbose_name='No company phone number')),
                ('no_appointment_letter', models.BooleanField(default=False, verbose_name='No Appointment Letter')),
                ('valid_gulf_country_visa', models.BooleanField(default=False, verbose_name='Has a valid gulf country visa in passport')),
                ('no_bags_long_trip', models.BooleanField(default=False, verbose_name='No bags though claim to be going for a long time')),
                ('shopping_overnight_stuff_in_bags', models.BooleanField(default=False, verbose_name='Shopping - Stuff for overnight stay in bags')),
                ('over_18_family_doesnt_know', models.BooleanField(default=False, verbose_name='Family members do not know they is going to India')),
                ('over_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family members unwilling to let them go')),
                ('which_contact', models.CharField(blank=True, max_length=127)),
                ('contact_paid', models.NullBooleanField()),
                ('contact_paid_how_much', models.CharField(blank=True, max_length=255, verbose_name='How much?')),
                ('noticed_hesitant', models.BooleanField(default=False, verbose_name='Hesitant')),
                ('noticed_nervous_or_afraid', models.BooleanField(default=False, verbose_name='Nervous or afraid')),
                ('noticed_hurrying', models.BooleanField(default=False, verbose_name='Hurrying')),
                ('noticed_drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Drugged or drowsy')),
                ('noticed_new_clothes', models.BooleanField(default=False, verbose_name='New clothes')),
                ('noticed_dirty_clothes', models.BooleanField(default=False, verbose_name='Dirty clothes')),
                ('noticed_carrying_full_bags', models.BooleanField(default=False, verbose_name='Carrying Full bags')),
                ('noticed_village_dress', models.BooleanField(default=False, verbose_name='Village Dress')),
                ('noticed_foreign_looking', models.BooleanField(default=False, verbose_name='Indian looking')),
                ('noticed_typical_village_look', models.BooleanField(default=False, verbose_name='Typical village look')),
                ('noticed_looked_like_agent', models.BooleanField(default=False, verbose_name='Looked like agent')),
                ('noticed_caste_difference', models.BooleanField(default=False, verbose_name='Caste difference')),
                ('noticed_young_looking', models.BooleanField(default=False, verbose_name='Young looking')),
                ('noticed_waiting_sitting', models.BooleanField(default=False, verbose_name='Waiting / sitting')),
                ('noticed_on_train', models.BooleanField(default=False, verbose_name='on train')),
                ('noticed_roaming_around', models.BooleanField(default=False, verbose_name='Roaming around')),
                ('noticed_exiting_vehicle', models.BooleanField(default=False, verbose_name='Exiting vehicle')),
                ('noticed_heading_to_vehicle', models.BooleanField(default=False, verbose_name='Heading to vehicle')),
                ('noticed_in_a_vehicle', models.BooleanField(default=False, verbose_name='In a vehicle')),
                ('noticed_in_a_rickshaw', models.BooleanField(default=False, verbose_name='In a rickshaw')),
                ('noticed_in_a_cart', models.BooleanField(default=False, verbose_name='In a cart')),
                ('noticed_carrying_a_baby', models.BooleanField(default=False, verbose_name='Carrying a baby')),
                ('noticed_on_the_phone', models.BooleanField(default=False, verbose_name='On the phone')),
                ('noticed_other_sign', models.CharField(default='False', max_length=127)),
                ('call_subcommittee', models.BooleanField(default=False, verbose_name='Call Subcommittee Chairperson/Vice-Chairperson/Secretary')),
                ('call_project_manager', models.BooleanField(default=False, verbose_name='Call Project Manager to confirm intercept')),
                ('scanned_form', models.FileField(blank=True, default='', upload_to='scanned_irf_forms', verbose_name='Attach scanned copy of form (pdf or image)')),
                ('form_entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='irfindia_entered_by', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.BorderStation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IrfNepal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=10, verbose_name='Status')),
                ('date_time_entered_into_system', models.DateTimeField(auto_now_add=True)),
                ('date_time_last_updated', models.DateTimeField(auto_now=True)),
                ('irf_number', models.CharField(max_length=20, unique=True, verbose_name='IRF #:')),
                ('number_of_victims', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of victims:')),
                ('location', models.CharField(max_length=255, verbose_name='Location:')),
                ('date_time_of_interception', models.DateTimeField(verbose_name='Date/Time:')),
                ('number_of_traffickers', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of traffickers')),
                ('staff_name', models.CharField(max_length=255, verbose_name='Staff Name:')),
                ('drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Girl appears drugged or drowsy')),
                ('who_in_group_husbandwife', models.BooleanField(default=False, verbose_name='Husband / Wife')),
                ('married_in_past_2_weeks', models.BooleanField(default=False, verbose_name='Married in the past 2 weeks')),
                ('married_in_past_2_8_weeks', models.BooleanField(default=False, verbose_name='Married within the past 2-8 weeks')),
                ('caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in a lie or contradiction')),
                ('other_red_flag', models.CharField(blank=True, max_length=255)),
                ('where_going_destination', models.CharField(blank=True, max_length=126, verbose_name='Location:')),
                ('where_going_job', models.BooleanField(default=False, verbose_name='Job')),
                ('passport_with_broker', models.BooleanField(default=False, verbose_name='Passport is with a broker')),
                ('job_too_good_to_be_true', models.BooleanField(default=False, verbose_name='Job is too good to be true')),
                ('not_real_job', models.BooleanField(default=False, verbose_name='Not a real job')),
                ('couldnt_confirm_job', models.BooleanField(default=False, verbose_name='Could not confirm job')),
                ('where_going_study', models.BooleanField(default=False, verbose_name='Study')),
                ('no_enrollment_docs', models.BooleanField(default=False, verbose_name='No documentation of enrollment')),
                ('doesnt_know_school_name', models.BooleanField(default=False, verbose_name="Does not Know School's Name and location")),
                ('no_school_phone', models.BooleanField(default=False, verbose_name='No phone number for School')),
                ('not_enrolled_in_school', models.BooleanField(default=False, verbose_name='Not enrolled in school')),
                ('where_runaway', models.BooleanField(default=False, verbose_name='Runaway')),
                ('running_away_over_18', models.BooleanField(default=False, verbose_name='Running away from home (18 years or older)')),
                ('running_away_under_18', models.BooleanField(default=False, verbose_name='Running away from home (under 18 years old)')),
                ('reluctant_family_info', models.BooleanField(default=False, verbose_name='Reluctant to give family info')),
                ('refuses_family_info', models.BooleanField(default=False, verbose_name='Will not give family info')),
                ('under_18_cant_contact_family', models.BooleanField(default=False, verbose_name='No family contact established')),
                ('under_18_family_doesnt_know', models.BooleanField(default=False, verbose_name="Family doesn't know she is going to India")),
                ('under_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family unwilling to let her go')),
                ('talked_to_family_member', models.CharField(blank=True, max_length=127)),
                ('reported_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Reported Total Red Flag Points:')),
                ('computed_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Computed Total Red Flag Points:')),
                ('who_noticed', models.CharField(blank=True, max_length=127)),
                ('staff_who_noticed', models.CharField(blank=True, max_length=255, verbose_name='Staff who noticed:')),
                ('type_of_intercept', models.CharField(blank=True, max_length=127)),
                ('trafficker_taken_into_custody', models.CharField(blank=True, max_length=20, null=True)),
                ('how_sure_was_trafficking', models.IntegerField(choices=[(1, '1 - Not at all sure'), (2, '2 - Unsure but suspects it'), (3, '3 - Somewhat sure'), (4, '4 - Very sure'), (5, '5 - Absolutely sure')], verbose_name='How sure are you that it was trafficking case?')),
                ('convinced_by_staff', models.CharField(default='False', max_length=127)),
                ('convinced_by_family', models.CharField(default='False', max_length=127)),
                ('convinced_by_police', models.CharField(default='False', max_length=127)),
                ('has_signature', models.BooleanField(default=False, verbose_name='Scanned form has signature?')),
                ('who_in_group_alone', models.BooleanField(default=False, verbose_name='Alone')),
                ('who_in_group_relative', models.BooleanField(default=False, verbose_name='Own brother, sister / relative')),
                ('meeting_someone_across_border', models.BooleanField(default=False, verbose_name='Is meeting a someone just across border')),
                ('seen_in_last_month_in_nepal', models.BooleanField(default=False, verbose_name="Meeting someone she's seen in Nepal in the last month")),
                ('traveling_with_someone_not_with_them', models.BooleanField(default=False, verbose_name='Was travelling with someone not with them')),
                ('wife_under_18', models.BooleanField(default=False, verbose_name='Wife is under 18')),
                ('less_than_2_weeks_before_eloping', models.BooleanField(default=False, verbose_name='Less than 2 weeks before eloping')),
                ('between_2_12_weeks_before_eloping', models.BooleanField(default=False, verbose_name='2-12 weeks before eloping')),
                ('caste_not_same_as_relative', models.BooleanField(default=False, verbose_name='Caste not the same as alleged relative')),
                ('doesnt_know_going_to_india', models.BooleanField(default=False, verbose_name="Doesn't know she's going to India")),
                ('where_going_visit', models.BooleanField(default=False, verbose_name='Visit / Family / Returning Home')),
                ('where_going_shopping', models.BooleanField(default=False, verbose_name='Shopping')),
                ('where_going_treatment', models.BooleanField(default=False, verbose_name='Treatment')),
                ('no_address_at_destination', models.BooleanField(default=False, verbose_name='No address at destination')),
                ('no_company_phone', models.BooleanField(default=False, verbose_name='No company phone number')),
                ('no_appointment_letter', models.BooleanField(default=False, verbose_name='No Appointment Letter')),
                ('valid_gulf_country_visa', models.BooleanField(default=False, verbose_name='Has a valid gulf country visa in passport')),
                ('no_bags_long_trip', models.BooleanField(default=False, verbose_name='No bags though claim to be going for a long time')),
                ('shopping_overnight_stuff_in_bags', models.BooleanField(default=False, verbose_name='Shopping - Stuff for overnight stay in bags')),
                ('reluctant_treatment_info', models.BooleanField(default=False, verbose_name='Reluctant to give info about treatment')),
                ('no_medical_documents', models.BooleanField(default=False, verbose_name='Does not have medical documents')),
                ('fake_medical_documents', models.BooleanField(default=False, verbose_name='Fake Medical documents')),
                ('no_medical_appointment', models.BooleanField(default=False, verbose_name='No medical appointment')),
                ('doesnt_know_villiage_details', models.BooleanField(default=False, verbose_name="Doesn't know details about village")),
                ('reluctant_villiage_info', models.BooleanField(default=False, verbose_name='Reluctant to give info about village')),
                ('over_18_family_doesnt_know', models.BooleanField(default=False, verbose_name='Family members do not know they is going to India')),
                ('over_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family members unwilling to let them go')),
                ('which_contact', models.CharField(blank=True, max_length=127)),
                ('contact_paid', models.NullBooleanField()),
                ('contact_paid_how_much', models.CharField(blank=True, max_length=255, verbose_name='How much?')),
                ('noticed_hesitant', models.BooleanField(default=False, verbose_name='Hesitant')),
                ('noticed_nervous_or_afraid', models.BooleanField(default=False, verbose_name='Nervous or afraid')),
                ('noticed_hurrying', models.BooleanField(default=False, verbose_name='Hurrying')),
                ('noticed_drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Drugged or drowsy')),
                ('noticed_new_clothes', models.BooleanField(default=False, verbose_name='New clothes')),
                ('noticed_dirty_clothes', models.BooleanField(default=False, verbose_name='Dirty clothes')),
                ('noticed_carrying_full_bags', models.BooleanField(default=False, verbose_name='Carrying Full bags')),
                ('noticed_village_dress', models.BooleanField(default=False, verbose_name='Village Dress')),
                ('noticed_foreign_looking', models.BooleanField(default=False, verbose_name='Indian looking')),
                ('noticed_typical_village_look', models.BooleanField(default=False, verbose_name='Typical village look')),
                ('noticed_looked_like_agent', models.BooleanField(default=False, verbose_name='Looked like agent')),
                ('noticed_caste_difference', models.BooleanField(default=False, verbose_name='Caste difference')),
                ('noticed_young_looking', models.BooleanField(default=False, verbose_name='Young looking')),
                ('noticed_waiting_sitting', models.BooleanField(default=False, verbose_name='Waiting / sitting')),
                ('noticed_on_train', models.BooleanField(default=False, verbose_name='on train')),
                ('noticed_roaming_around', models.BooleanField(default=False, verbose_name='Roaming around')),
                ('noticed_exiting_vehicle', models.BooleanField(default=False, verbose_name='Exiting vehicle')),
                ('noticed_heading_to_vehicle', models.BooleanField(default=False, verbose_name='Heading to vehicle')),
                ('noticed_in_a_vehicle', models.BooleanField(default=False, verbose_name='In a vehicle')),
                ('noticed_in_a_rickshaw', models.BooleanField(default=False, verbose_name='In a rickshaw')),
                ('noticed_in_a_cart', models.BooleanField(default=False, verbose_name='In a cart')),
                ('noticed_carrying_a_baby', models.BooleanField(default=False, verbose_name='Carrying a baby')),
                ('noticed_on_the_phone', models.BooleanField(default=False, verbose_name='On the phone')),
                ('noticed_other_sign', models.CharField(default='False', max_length=127)),
                ('case_notes', models.TextField(blank=True, verbose_name='Case Notes')),
                ('scanned_form', models.FileField(blank=True, default='', upload_to='scanned_irf_forms', verbose_name='Attach scanned copy of form (pdf or image)')),
                ('form_entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='irfnepal_entered_by', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.BorderStation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(blank=True, max_length=126)),
                ('description', models.CharField(max_length=126, null=True)),
                ('params', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('answer_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.AnswerType')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Category')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=126)),
                ('form_model_name', models.CharField(max_length=126)),
                ('response_model_name', models.CharField(max_length=126, null=True)),
                ('foreign_key_field_parent', models.CharField(max_length=126, null=True)),
                ('foreign_key_field_child', models.CharField(max_length=126, null=True)),
                ('parent_storage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Storage')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='birthdate',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='nationality',
            field=models.CharField(blank=True, default='', max_length=127),
        ),
        migrations.AddField(
            model_name='person',
            name='passport',
            field=models.CharField(blank=True, default='', max_length=127),
        ),
        migrations.AlterField(
            model_name='permission',
            name='min_level',
            field=models.CharField(default='STATION', max_length=100),
        ),
        migrations.AddField(
            model_name='intercepteenepal',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptees', to='dataentry.IrfNepal'),
        ),
        migrations.AddField(
            model_name='intercepteenepal',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Person'),
        ),
        migrations.AddField(
            model_name='intercepteeindia',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptees', to='dataentry.IrfIndia'),
        ),
        migrations.AddField(
            model_name='intercepteeindia',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Person'),
        ),
        migrations.AddField(
            model_name='formvalidationquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question'),
        ),
        migrations.AddField(
            model_name='formvalidationquestion',
            name='validation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.FormValidation'),
        ),
        migrations.AddField(
            model_name='formvalidation',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.FormValidationLevel'),
        ),
        migrations.AddField(
            model_name='formvalidation',
            name='trigger',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question'),
        ),
        migrations.AddField(
            model_name='formvalidation',
            name='validation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.FormValidationType'),
        ),
        migrations.AddField(
            model_name='form',
            name='form_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.FormType'),
        ),
        migrations.AddField(
            model_name='form',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Storage'),
        ),
        migrations.AddField(
            model_name='export_import_question',
            name='export_import',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.ExportImport'),
        ),
        migrations.AddField(
            model_name='export_import_question',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question'),
        ),
        migrations.AddField(
            model_name='category',
            name='category_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.CategoryType'),
        ),
        migrations.AddField(
            model_name='category',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Form'),
        ),
        migrations.AddField(
            model_name='cardstorage',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Category'),
        ),
        migrations.AddField(
            model_name='cardstorage',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Storage'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.Question'),
        ),
    ]
