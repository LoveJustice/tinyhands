# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-11-26 15:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dataentry', '0123_auto_20191113_1741'),
    ]

    operations = [
        migrations.CreateModel(
            name='IntercepteeNamibia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='interceptee_photos')),
                ('anonymized_photo', models.CharField(max_length=126, null=True)),
                ('kind', models.CharField(choices=[('v', 'Victim'), ('t', 'Trafficker'), ('u', 'Unknown')], max_length=4)),
                ('relation_to', models.CharField(blank=True, max_length=255)),
                ('trafficker_taken_into_custody', models.BooleanField(default=False, verbose_name='taken_into_custody')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IrfAttachmentNamibia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_number', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.CharField(max_length=126, null=True)),
                ('attachment', models.FileField(upload_to='scanned_irf_forms', verbose_name='Attach scanned copy of form (pdf or image)')),
                ('private_card', models.BooleanField(default=True)),
                ('option', models.CharField(max_length=126, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IrfNamibia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=20, verbose_name='Status')),
                ('date_time_entered_into_system', models.DateTimeField(auto_now_add=True)),
                ('date_time_last_updated', models.DateTimeField(auto_now=True)),
                ('irf_number', models.CharField(max_length=20, unique=True, verbose_name='IRF #:')),
                ('number_of_victims', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of victims:')),
                ('location', models.CharField(max_length=255, verbose_name='Location:')),
                ('date_time_of_interception', models.DateTimeField(verbose_name='Date/Time:')),
                ('number_of_traffickers', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of traffickers')),
                ('staff_name', models.CharField(max_length=255, verbose_name='Staff Name:')),
                ('drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Girl appears drugged or drowsy')),
                ('who_in_group_husbandwife', models.BooleanField(default=False, verbose_name='Husband / Wife')),
                ('married_in_past_2_weeks', models.BooleanField(default=False, verbose_name='Married in the past 2 weeks')),
                ('married_in_past_2_8_weeks', models.BooleanField(default=False, verbose_name='Married within the past 2-8 weeks')),
                ('caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in a lie or contradiction')),
                ('other_red_flag', models.CharField(blank=True, max_length=255)),
                ('where_going_destination', models.CharField(blank=True, max_length=126, verbose_name='Location:')),
                ('where_going_job', models.BooleanField(default=False, verbose_name='Job')),
                ('passport_with_broker', models.BooleanField(default=False, verbose_name='Passport is with a broker')),
                ('job_too_good_to_be_true', models.BooleanField(default=False, verbose_name='Job is too good to be true')),
                ('not_real_job', models.BooleanField(default=False, verbose_name='Not a real job')),
                ('couldnt_confirm_job', models.BooleanField(default=False, verbose_name='Could not confirm job')),
                ('where_going_study', models.BooleanField(default=False, verbose_name='Study')),
                ('no_enrollment_docs', models.BooleanField(default=False, verbose_name='No documentation of enrollment')),
                ('doesnt_know_school_name', models.BooleanField(default=False, verbose_name="Does not Know School's Name and location")),
                ('no_school_phone', models.BooleanField(default=False, verbose_name='No phone number for School')),
                ('not_enrolled_in_school', models.BooleanField(default=False, verbose_name='Not enrolled in school')),
                ('where_runaway', models.BooleanField(default=False, verbose_name='Runaway')),
                ('running_away_over_18', models.BooleanField(default=False, verbose_name='Running away from home (18 years or older)')),
                ('running_away_under_18', models.BooleanField(default=False, verbose_name='Running away from home (under 18 years old)')),
                ('reluctant_family_info', models.BooleanField(default=False, verbose_name='Reluctant to give family info')),
                ('refuses_family_info', models.BooleanField(default=False, verbose_name='Will not give family info')),
                ('under_18_cant_contact_family', models.BooleanField(default=False, verbose_name='No family contact established')),
                ('under_18_family_doesnt_know', models.BooleanField(default=False, verbose_name="Family doesn't know she is going to India")),
                ('under_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family unwilling to let her go')),
                ('talked_to_family_member', models.CharField(blank=True, max_length=127)),
                ('reported_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Reported Total Red Flag Points:')),
                ('computed_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Computed Total Red Flag Points:')),
                ('who_noticed', models.CharField(max_length=127, null=True)),
                ('staff_who_noticed', models.CharField(blank=True, max_length=255, verbose_name='Staff who noticed:')),
                ('type_of_intercept', models.CharField(max_length=127, null=True)),
                ('how_sure_was_trafficking', models.IntegerField(choices=[(1, '1 - Not at all sure'), (2, '2 - Unsure but suspects it'), (3, '3 - Somewhat sure'), (4, '4 - Very sure'), (5, '5 - Absolutely sure')], null=True, verbose_name='How sure are you that it was trafficking case?')),
                ('convinced_by_staff', models.CharField(blank=True, max_length=127)),
                ('convinced_by_family', models.CharField(blank=True, max_length=127)),
                ('convinced_by_police', models.CharField(blank=True, max_length=127)),
                ('evidence_categorization', models.CharField(max_length=127, null=True)),
                ('reason_for_intercept', models.TextField(blank=True, verbose_name='Primary reason for intercept')),
                ('has_signature', models.BooleanField(default=False, verbose_name='Scanned form has signature?')),
                ('logbook_received', models.DateField(null=True)),
                ('logbook_incomplete_questions', models.CharField(blank=True, max_length=127)),
                ('logbook_incomplete_sections', models.CharField(blank=True, max_length=127)),
                ('logbook_information_complete', models.DateField(null=True)),
                ('logbook_notes', models.TextField(blank=True, verbose_name='Logbook Notes')),
                ('logbook_submitted', models.DateField(null=True)),
                ('logbook_first_verification', models.CharField(blank=True, max_length=127)),
                ('logbook_first_reason', models.TextField(blank=True, verbose_name='First Reason')),
                ('logbook_followup_call', models.CharField(blank=True, max_length=127)),
                ('logbook_first_verification_date', models.DateField(null=True)),
                ('logbook_leadership_review', models.CharField(blank=True, max_length=127)),
                ('logbook_second_verification', models.CharField(blank=True, max_length=127)),
                ('logbook_second_reason', models.TextField(blank=True, verbose_name='Second Reason')),
                ('logbook_second_verification_date', models.DateField(null=True)),
                ('logbook_back_corrected', models.TextField(blank=True, verbose_name='Back Corrected')),
                ('appearance_drug_withdrawl', models.BooleanField(default=False, verbose_name='Signs of Drug withdrawl')),
                ('appearance_abuse', models.BooleanField(default=False, verbose_name='Signs of Abuse')),
                ('appearance_disorientated', models.BooleanField(default=False, verbose_name='Disorientated/Uncertain')),
                ('appearance_impoverished', models.BooleanField(default=False, verbose_name='Impoverished')),
                ('appearance_long_jouney_little_luggage', models.BooleanField(default=False, verbose_name='Long journey but little luggage')),
                ('appearance_revealing_clothing', models.BooleanField(default=False, verbose_name='Revealing clothing')),
                ('appearance_avoid_officials', models.BooleanField(default=False, verbose_name='Avoiding officials/hesitant to talk')),
                ('appearance_group_doesnt_know', models.BooleanField(default=False, verbose_name='Group that does not know each other')),
                ('appearance_with_chaperone', models.BooleanField(default=False, verbose_name='With a chaperone')),
                ('passport_imposter', models.BooleanField(default=False, verbose_name='Imposter')),
                ('passport_fraudulent', models.BooleanField(default=False, verbose_name='Fake')),
                ('passport_illegally_obtained', models.BooleanField(default=False, verbose_name='Illegally obtained')),
                ('passport_expired', models.BooleanField(default=False, verbose_name='Expired')),
                ('visa_none', models.BooleanField(default=False, verbose_name='None')),
                ('visa_fake', models.BooleanField(default=False, verbose_name='Fake')),
                ('visa_misuse', models.BooleanField(default=False, verbose_name='Misuse - for purposes other than issued')),
                ('visa_doesnt_match_nature', models.BooleanField(default=False, verbose_name='Nature of travel')),
                ('visa_doesnt_match_duration', models.BooleanField(default=False, verbose_name='Duration of travel')),
                ('visa_doesnt_match_destination', models.BooleanField(default=False, verbose_name='Destination of travel')),
                ('supporting_documents_none', models.BooleanField(default=False, verbose_name='None')),
                ('supporting_documents_fraudulent', models.BooleanField(default=False, verbose_name='Fake')),
                ('supporting_documents_insufficient', models.BooleanField(default=False, verbose_name='Insufficient')),
                ('supporting_documents_inaccurate', models.BooleanField(default=False, verbose_name='Inaccurate')),
                ('supporting_documents_one_way_ticket', models.BooleanField(default=False, verbose_name='One way ticket')),
                ('destination_middle_east', models.BooleanField(default=False, verbose_name='Middle east')),
                ('destination_lesotho', models.BooleanField(default=False, verbose_name='Lesotho')),
                ('destination_mozambique', models.BooleanField(default=False, verbose_name='Mozambique')),
                ('destination_nigeria', models.BooleanField(default=False, verbose_name='Nigeria')),
                ('doesnt_speak_local_language', models.BooleanField(default=False, verbose_name='Does not speak English/local language')),
                ('financial_support', models.BooleanField(default=False, verbose_name='Cannot support themselves financially')),
                ('doesnt_know_travel_details', models.BooleanField(default=False, verbose_name='Does not know details of travel')),
                ('no_return_ticket', models.BooleanField(default=False, verbose_name='No return ticket')),
                ('in_debt_to_host', models.BooleanField(default=False, verbose_name='Is in debt to host/employer/recruiter')),
                ('afraid_of_host', models.BooleanField(default=False, verbose_name='Afraid of host/employer/recruiter')),
                ('being_forced', models.BooleanField(default=False, verbose_name='Being forced')),
                ('host_non_relative_paid', models.BooleanField(default=False, verbose_name='Host/Recruiter is non-relative and paid for travel expenses')),
                ('contradiction_in_story', models.BooleanField(default=False, verbose_name='contradicction in story')),
                ('employment_massage_parlor', models.BooleanField(default=False, verbose_name='Massage parlor')),
                ('employment_dance', models.BooleanField(default=False, verbose_name='Dance/modeling, domestic work, casino, bush lodge, conferences, soccer')),
                ('employment_doesnt_exist', models.BooleanField(default=False, verbose_name='Place does not exist')),
                ('employment_no_offer', models.BooleanField(default=False, verbose_name='No job offer')),
                ('employment_unable_verify', models.BooleanField(default=False, verbose_name='Unable to verify')),
                ('employment_employer_reluctant', models.BooleanField(default=False, verbose_name='Employer reluctant to give information to victim')),
                ('visit_boyfriend', models.BooleanField(default=False, verbose_name='Visiting a boyfriend')),
                ('visit_attend_event', models.BooleanField(default=False, verbose_name='Attending an event')),
                ('visit_intend_work', models.BooleanField(default=False, verbose_name='Evidence of intention to work')),
                ('visit_no_connection_to_host', models.BooleanField(default=False, verbose_name='No clear connection to host')),
                ('visit_doesnt_know_host', models.BooleanField(default=False, verbose_name='Does not know host well')),
                ('visit_unaware_who_fetching_them', models.BooleanField(default=False, verbose_name='Unaware of who is fetching them from airport')),
                ('visit_no_itinerary', models.BooleanField(default=False, verbose_name='No travel itinerary')),
                ('visit_abnormal_short_stay', models.BooleanField(default=False, verbose_name='Abnormally short stay')),
                ('visit_unaware_who_fetch', models.BooleanField(default=False, verbose_name='Unaware of who is fetching them from airport')),
                ('relationship_social_media', models.BooleanField(default=False, verbose_name='Met on social media')),
                ('relationship_married_two_months', models.BooleanField(default=False, verbose_name='Married in the past 2 months')),
                ('relationship_suspect_forced_marriage', models.BooleanField(default=False, verbose_name='Suspect forced marriage')),
                ('relationship_never_met', models.BooleanField(default=False, verbose_name='Never met in person')),
                ('relationship_to_get_married', models.BooleanField(default=False, verbose_name='Coming to get married')),
                ('relationship_dont_speak_same_language', models.BooleanField(default=False, verbose_name='Do not speak the same language')),
                ('relationship_arranged_by_other', models.BooleanField(default=False, verbose_name='Arranged by someone else')),
                ('study_school_doesnt_exist', models.BooleanField(default=False, verbose_name='School does not exist')),
                ('study_doesnt_know_course_details', models.BooleanField(default=False, verbose_name='Does not know details of course')),
                ('study_doesnt_know_school_details', models.BooleanField(default=False, verbose_name='Does not know details of school')),
                ('study_doesnt_know_when_starts', models.BooleanField(default=False, verbose_name='Does not know when course starts')),
                ('story_caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in lie')),
                ('story_contradicts_pvot', models.BooleanField(default=False, verbose_name="Contradicts PVOT's story")),
                ('story_claims_not_know', models.BooleanField(default=False, verbose_name='Claims not to know PVOT')),
                ('story_invite_behalf_of_other', models.BooleanField(default=False, verbose_name='Inviting them on behalf of someone else')),
                ('story_will_not_provide_permit', models.BooleanField(default=False, verbose_name='Hangs up when asked for permit/ID')),
                ('story_illogical', models.BooleanField(default=False, verbose_name='Illogical story')),
                ('story_bribe', models.BooleanField(default=False, verbose_name='Illogical story')),
                ('paid_flight', models.BooleanField(default=False, verbose_name='Has paid for flight')),
                ('paid_flight_cash', models.BooleanField(default=False, verbose_name='Flight was paid for in cash')),
                ('paid_offer_expenses', models.BooleanField(default=False, verbose_name='Offering to pay without expectations/explanation')),
                ('paid_no_payback_terms', models.BooleanField(default=False, verbose_name='Not determined payback terms')),
                ('paid_for_accomodations', models.BooleanField(default=False, verbose_name='Paid for accomodations')),
                ('status_not_legally_in_country', models.BooleanField(default=False, verbose_name='Not in country legally')),
                ('status_known_trafficker', models.BooleanField(default=False, verbose_name='Is a know trafficker')),
                ('status_trafficker_associated', models.BooleanField(default=False, verbose_name='Associated to known trafficker')),
                ('status_illegal_activity', models.BooleanField(default=False, verbose_name='Involved in illegal activity')),
                ('status_false_details', models.BooleanField(default=False, verbose_name='Provided false details')),
                ('status_misuse_of_permit', models.BooleanField(default=False, verbose_name='Misuse of permit')),
                ('documentation_in_order', models.BooleanField(default=False, verbose_name='Documentation in order')),
                ('no_red_flags', models.BooleanField(default=False, verbose_name='No red flags')),
                ('story_consistent', models.BooleanField(default=False, verbose_name='Story consistent')),
                ('details_validated_and_correted', models.BooleanField(default=False, verbose_name='Details were validated and corrected')),
                ('child_no_affidavit', models.BooleanField(default=False, verbose_name='No affidavit/birth certificate')),
                ('child_fearful', models.BooleanField(default=False, verbose_name='Child fearful of handler')),
                ('child_not_escorted', models.BooleanField(default=False, verbose_name='Not being escorted by direct relative')),
                ('child_handler_inconsistent_story', models.BooleanField(default=False, verbose_name='Handler stories are inconsistent')),
                ('child_handler_false_claims', models.BooleanField(default=False, verbose_name='Handler falsely claims to be relative')),
                ('child_handler_criminal', models.BooleanField(default=False, verbose_name='Handler involved in criminal activity')),
                ('child_relative_contacted', models.CharField(blank=True, default='', max_length=127)),
                ('which_contact', models.CharField(blank=True, default='', max_length=127)),
                ('name_of_contact', models.CharField(blank=True, default='', max_length=127)),
                ('initial_signs', models.CharField(blank=True, default='', max_length=127)),
                ('entry_allowed', models.BooleanField(default=False, verbose_name='Entry allowed')),
                ('entry_refused', models.BooleanField(default=False, verbose_name='Entry refused')),
                ('transit_allowed', models.BooleanField(default=False, verbose_name='Transit allowed')),
                ('transit_refused', models.BooleanField(default=False, verbose_name='Transit refused')),
                ('believe_they_are_pvot', models.NullBooleanField(verbose_name='Do they believe they are PVOT?')),
                ('require_assistance', models.NullBooleanField(verbose_name='Do they require assistance?')),
                ('ims_case_number', models.CharField(blank=True, default='', max_length=127)),
                ('case_report', models.BooleanField(default=False, verbose_name='Case report')),
                ('cif', models.BooleanField(default=False, verbose_name='CIF')),
                ('case_notes', models.TextField(blank=True, default='', verbose_name='Case Notes')),
                ('interception_made', models.CharField(max_length=127, null=True)),
                ('handed_over_to', models.CharField(blank=True, default='', max_length=127)),
                ('form_entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='irfnamibia_entered_by', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.BorderStation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='irfattachmentnamibia',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.IrfNamibia'),
        ),
        migrations.AddField(
            model_name='intercepteenamibia',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptees', to='dataentry.IrfNamibia'),
        ),
        migrations.AddField(
            model_name='intercepteenamibia',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Person'),
        ),
    ]
