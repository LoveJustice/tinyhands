# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-06-13 17:44
from __future__ import unicode_literals
import os

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from django.core.management import call_command
from django.core.management.color import no_style
from django.db import connection

from dataentry.models import Country

app_name = 'dataentry'

country_names = [
    'Nepal',
    'South Africa',
    'Thailand',
    'India'
    ]
 
form_model_names = [
    'FormType',
    'Storage',
    "Form",
    'CategoryType',
    'Category',
    'CardStorage',
    'AnswerType',
    'Question',
    'QuestionLayout',
    'QuestionStorage',
    'Answer',
    'FormValidationLevel',
    'FormValidationType',
    'FormValidation',
    'FormValidationQuestion',
    ]

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dataentry', '0053_auto_20180605_1516'),
    ]

    def ensure_countries(apps, schema_editor):
        assign_id = 1
        for country_name in country_names:
            country = Country()
            country.id = assign_id
            country.name = country_name
            country.latitude = 0
            country.longitude = 0
            try:
                country.save()
            except Exception:
                pass
            
            assign_id = assign_id + 1
            
        sequence_sql = connection.ops.sequence_reset_sql(no_style(), [Country,])
        with connection.cursor() as cursor:
            for sql in sequence_sql:
                cursor.execute(sql)

    def load_fixture(apps, schema_editor):
        fixture_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../fixtures'))
        fixture_filename = 'form_data_20180613.json'
        fixture_file = os.path.join(fixture_dir, fixture_filename)
        call_command('loaddata', fixture_file) 
    
    def unload_prior(apps, schema_editor):
        for model_name in reversed(form_model_names):
            my_model = apps.get_model(app_name, model_name)
            my_model.objects.all().delete()

    operations = [
        migrations.CreateModel(
            name='IntercepteeSouthAfrica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='interceptee_photos')),
                ('kind', models.CharField(choices=[('v', 'Victim'), ('t', 'Trafficker'), ('u', 'Unknown')], max_length=4)),
                ('relation_to', models.CharField(blank=True, max_length=255)),
                ('trafficker_taken_into_custody', models.BooleanField(default=False, verbose_name='taken_into_custody')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IrfSouthAfrica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=20, verbose_name='Status')),
                ('date_time_entered_into_system', models.DateTimeField(auto_now_add=True)),
                ('date_time_last_updated', models.DateTimeField(auto_now=True)),
                ('irf_number', models.CharField(max_length=20, unique=True, verbose_name='IRF #:')),
                ('number_of_victims', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of victims:')),
                ('location', models.CharField(max_length=255, verbose_name='Location:')),
                ('date_time_of_interception', models.DateTimeField(verbose_name='Date/Time:')),
                ('number_of_traffickers', models.PositiveIntegerField(blank=True, null=True, verbose_name='# of traffickers')),
                ('staff_name', models.CharField(max_length=255, verbose_name='Staff Name:')),
                ('drugged_or_drowsy', models.BooleanField(default=False, verbose_name='Girl appears drugged or drowsy')),
                ('who_in_group_husbandwife', models.BooleanField(default=False, verbose_name='Husband / Wife')),
                ('married_in_past_2_weeks', models.BooleanField(default=False, verbose_name='Married in the past 2 weeks')),
                ('married_in_past_2_8_weeks', models.BooleanField(default=False, verbose_name='Married within the past 2-8 weeks')),
                ('caught_in_lie', models.BooleanField(default=False, verbose_name='Caught in a lie or contradiction')),
                ('other_red_flag', models.CharField(blank=True, max_length=255)),
                ('where_going_destination', models.CharField(blank=True, max_length=126, verbose_name='Location:')),
                ('where_going_job', models.BooleanField(default=False, verbose_name='Job')),
                ('passport_with_broker', models.BooleanField(default=False, verbose_name='Passport is with a broker')),
                ('job_too_good_to_be_true', models.BooleanField(default=False, verbose_name='Job is too good to be true')),
                ('not_real_job', models.BooleanField(default=False, verbose_name='Not a real job')),
                ('couldnt_confirm_job', models.BooleanField(default=False, verbose_name='Could not confirm job')),
                ('where_going_study', models.BooleanField(default=False, verbose_name='Study')),
                ('no_enrollment_docs', models.BooleanField(default=False, verbose_name='No documentation of enrollment')),
                ('doesnt_know_school_name', models.BooleanField(default=False, verbose_name="Does not Know School's Name and location")),
                ('no_school_phone', models.BooleanField(default=False, verbose_name='No phone number for School')),
                ('not_enrolled_in_school', models.BooleanField(default=False, verbose_name='Not enrolled in school')),
                ('where_runaway', models.BooleanField(default=False, verbose_name='Runaway')),
                ('running_away_over_18', models.BooleanField(default=False, verbose_name='Running away from home (18 years or older)')),
                ('running_away_under_18', models.BooleanField(default=False, verbose_name='Running away from home (under 18 years old)')),
                ('reluctant_family_info', models.BooleanField(default=False, verbose_name='Reluctant to give family info')),
                ('refuses_family_info', models.BooleanField(default=False, verbose_name='Will not give family info')),
                ('under_18_cant_contact_family', models.BooleanField(default=False, verbose_name='No family contact established')),
                ('under_18_family_doesnt_know', models.BooleanField(default=False, verbose_name="Family doesn't know she is going to India")),
                ('under_18_family_unwilling', models.BooleanField(default=False, verbose_name='Family unwilling to let her go')),
                ('talked_to_family_member', models.CharField(blank=True, max_length=127)),
                ('reported_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Reported Total Red Flag Points:')),
                ('computed_total_red_flags', models.IntegerField(blank=True, null=True, verbose_name='Computed Total Red Flag Points:')),
                ('who_noticed', models.CharField(blank=True, max_length=127)),
                ('staff_who_noticed', models.CharField(blank=True, max_length=255, verbose_name='Staff who noticed:')),
                ('type_of_intercept', models.CharField(blank=True, max_length=127)),
                ('how_sure_was_trafficking', models.IntegerField(choices=[(1, '1 - Not at all sure'), (2, '2 - Unsure but suspects it'), (3, '3 - Somewhat sure'), (4, '4 - Very sure'), (5, '5 - Absolutely sure')], verbose_name='How sure are you that it was trafficking case?')),
                ('convinced_by_staff', models.CharField(default='False', max_length=127)),
                ('convinced_by_family', models.CharField(default='False', max_length=127)),
                ('convinced_by_police', models.CharField(default='False', max_length=127)),
                ('has_signature', models.BooleanField(default=False, verbose_name='Scanned form has signature?')),
                ('nationality_gender_asian_female', models.BooleanField(default=False, verbose_name='Asian Female')),
                ('nationality_gender_pakistani_male', models.BooleanField(default=False, verbose_name='Pakistani Male')),
                ('nationality_gender_bangladeshi_male', models.BooleanField(default=False, verbose_name='Bangladeshi Male')),
                ('nationality_gender_nepali_male', models.BooleanField(default=False, verbose_name='Nepali Male')),
                ('nationality_gender_african_female', models.BooleanField(default=False, verbose_name='African Female')),
                ('nationality_gender_ethiopian_female', models.BooleanField(default=False, verbose_name='Ethipoian Female')),
                ('nationality_gender_east_europe_female', models.BooleanField(default=False, verbose_name='Eastern Europe Female')),
                ('nationality_gender_african_child', models.BooleanField(default=False, verbose_name='Any African child')),
                ('nationality_gender_malawian_female', models.BooleanField(default=False, verbose_name='Malawian Female')),
                ('nationality_gender_other', models.BooleanField(default=False, verbose_name='Other')),
                ('appearance_drug_withdrawl', models.BooleanField(default=False, verbose_name='Signs of Drug withdrawl')),
                ('appearance_abuse', models.BooleanField(default=False, verbose_name='Signs of Abuse')),
                ('appearance_disorientated', models.BooleanField(default=False, verbose_name='Disorientated/Uncertain')),
                ('appearance_impoverished', models.BooleanField(default=False, verbose_name='Impoverished')),
                ('appearance_long_jouney_little_luggage', models.BooleanField(default=False, verbose_name='Long journey but little luggage')),
                ('appearance_revealing_clothing', models.BooleanField(default=False, verbose_name='Revealing clothing')),
                ('appearance_avoid_officials', models.BooleanField(default=False, verbose_name='Avoiding officials/hesitant to talk')),
                ('appearance_lady_boy', models.BooleanField(default=False, verbose_name='Lady boy')),
                ('appearance_group_doesnt_know', models.BooleanField(default=False, verbose_name='Group that does not know each other')),
                ('appearance_with_chaperone', models.BooleanField(default=False, verbose_name='With a chaperone')),
                ('passport_imposter', models.BooleanField(default=False, verbose_name='Imposter')),
                ('passport_fake', models.BooleanField(default=False, verbose_name='Fake')),
                ('passport_illegally_obtained', models.BooleanField(default=False, verbose_name='Illegally obtained')),
                ('passport_expired', models.BooleanField(default=False, verbose_name='Expired')),
                ('visa_none', models.BooleanField(default=False, verbose_name='None')),
                ('visa_fake', models.BooleanField(default=False, verbose_name='Fake')),
                ('visa_misuse', models.BooleanField(default=False, verbose_name='Misuse - for purposes other than issued')),
                ('visa_doesnt_match_nature', models.BooleanField(default=False, verbose_name='Nature of travel')),
                ('visa_doesnt_match_duration', models.BooleanField(default=False, verbose_name='Duration of travel')),
                ('visa_doesnt_match_destination', models.BooleanField(default=False, verbose_name='Destination of travel')),
                ('supporting_documents_none', models.BooleanField(default=False, verbose_name='None')),
                ('supporting_documents_fake', models.BooleanField(default=False, verbose_name='Fake')),
                ('supporting_documents_insufficient', models.BooleanField(default=False, verbose_name='Insufficient')),
                ('supporting_documents_inaccurate', models.BooleanField(default=False, verbose_name='Inaccurate')),
                ('supporting_documents_one_way_ticket', models.BooleanField(default=False, verbose_name='One way ticket')),
                ('destination_middle_east', models.BooleanField(default=False, verbose_name='Middle east')),
                ('destination_ireland', models.BooleanField(default=False, verbose_name='Ireland')),
                ('destination_manchester', models.BooleanField(default=False, verbose_name='Manchester')),
                ('destination_swaziland', models.BooleanField(default=False, verbose_name='Swaziland')),
                ('destination_mozambique', models.BooleanField(default=False, verbose_name='Mozambique')),
                ('destination_nigeria', models.BooleanField(default=False, verbose_name='Nigeria')),
                ('doesnt_speak_local_language', models.BooleanField(default=False, verbose_name='Does not speak English/local language')),
                ('financial_support', models.BooleanField(default=False, verbose_name='Cannot support themselves financially')),
                ('doesnt_know_travel_details', models.BooleanField(default=False, verbose_name='Does not know details of travel')),
                ('in_debt_to_host', models.BooleanField(default=False, verbose_name='Is in debt to host/employer/recruiter')),
                ('afraid_of_host', models.BooleanField(default=False, verbose_name='Afraid of host/employer/recruiter')),
                ('being_forced', models.BooleanField(default=False, verbose_name='Being forced')),
                ('employment_massage_parlor', models.BooleanField(default=False, verbose_name='Massage parlor')),
                ('employment_dance', models.BooleanField(default=False, verbose_name='Dance/modeling, domestic work, casino, bush lodge, conferences, soccer')),
                ('employment_doesnt_exist', models.BooleanField(default=False, verbose_name='Place does not exist')),
                ('employment_no_offer', models.BooleanField(default=False, verbose_name='No job offer')),
                ('employment_unable_verify', models.BooleanField(default=False, verbose_name='Unable to verify')),
                ('employment_employer_reluctant', models.BooleanField(default=False, verbose_name='Employer reluctant to give information to victim')),
                ('where_going_visit', models.BooleanField(default=False, verbose_name='Visit / Family / Returning Home')),
                ('visit_boyfriend', models.BooleanField(default=False, verbose_name='Visiting a boyfriend')),
                ('visit_attend_event', models.BooleanField(default=False, verbose_name='Attending an event')),
                ('visit_intend_work', models.BooleanField(default=False, verbose_name='Evidence of intention to work')),
                ('visit_doesnt_know_host', models.BooleanField(default=False, verbose_name='Does not know host well/No clear connection to host')),
                ('visit_no_itinerary', models.BooleanField(default=False, verbose_name='No travel itinerary')),
                ('visit_abnormal_short_stay', models.BooleanField(default=False, verbose_name='Abnormally short stay')),
                ('where_going_relationship', models.BooleanField(default=False, verbose_name='Relaionship')),
                ('relationship_social_media', models.BooleanField(default=False, verbose_name='Met on social media')),
                ('relationship_married_two_months', models.BooleanField(default=False, verbose_name='Married in the past 2 months')),
                ('relationship_never_met', models.BooleanField(default=False, verbose_name='Never met in person')),
                ('relationship_to_get_married', models.BooleanField(default=False, verbose_name='Coming to get married')),
                ('relationship_dont_speak_same_language', models.BooleanField(default=False, verbose_name='Do not speak the same language')),
                ('relationship_arranged_by_other', models.BooleanField(default=False, verbose_name='Arranged by someone else')),
                ('study_school_doesnt_exist', models.BooleanField(default=False, verbose_name='School does not exist')),
                ('study_doesnt_know_course_details', models.BooleanField(default=False, verbose_name='Does not know details of course')),
                ('study_doesnt_know_school_details', models.BooleanField(default=False, verbose_name='Does not know details of school')),
                ('study_doesnt_know_when_starts', models.BooleanField(default=False, verbose_name='Does not know when course starts')),
                ('story_claims_not_know', models.BooleanField(default=False, verbose_name='Claims not to know them')),
                ('story_invite_behalf_of_other', models.BooleanField(default=False, verbose_name='Inviting them on behalf of someone else')),
                ('story_illogical', models.BooleanField(default=False, verbose_name='Illogical story')),
                ('story_bribe', models.BooleanField(default=False, verbose_name='Illogical story')),
                ('paid_flight', models.BooleanField(default=False, verbose_name='Has paid for flight')),
                ('paid_flight_cash', models.BooleanField(default=False, verbose_name='Flight was paid for in cash')),
                ('paid_offer_expenses', models.BooleanField(default=False, verbose_name='Offering to pay all expenses without explanation')),
                ('paid_no_payback_terms', models.BooleanField(default=False, verbose_name='No determined payback terms')),
                ('status_not_legally_in_country', models.BooleanField(default=False, verbose_name='Not in country legally')),
                ('status_known_trafficker', models.BooleanField(default=False, verbose_name='Is a know trafficker')),
                ('status_trafficker_associated', models.BooleanField(default=False, verbose_name='Associated to known trafficker')),
                ('status_illegal_activity', models.BooleanField(default=False, verbose_name='Involved in illegal activity')),
                ('status_false_details', models.BooleanField(default=False, verbose_name='Provided false details')),
                ('child_no_affidavit', models.BooleanField(default=False, verbose_name='No affidavit/birth certificate')),
                ('child_fearful', models.BooleanField(default=False, verbose_name='Child fearful of handler')),
                ('child_not_escorted', models.BooleanField(default=False, verbose_name='Not being escorted by direct relative')),
                ('child_handler_inconsistent_story', models.BooleanField(default=False, verbose_name='Handler stories are inconsistent')),
                ('child_handler_false_claims', models.BooleanField(default=False, verbose_name='Handler falsely claims to be relative')),
                ('child_handler_criminal', models.BooleanField(default=False, verbose_name='Handler involved in criminal activity')),
                ('child_relative_contacted', models.CharField(blank=True, default='', max_length=127)),
                ('which_contact', models.CharField(blank=True, default='', max_length=127)),
                ('name_of_contact', models.CharField(blank=True, default='', max_length=127)),
                ('initial_signs', models.CharField(blank=True, default='', max_length=127)),
                ('case_notes', models.TextField(blank=True, default='', verbose_name='Case Notes')),
                ('interception_made', models.CharField(max_length=127, null=True)),
                ('handed_over_to', models.CharField(blank=True, default='', max_length=127)),
                ('scanned_form', models.FileField(blank=True, default='', upload_to='scanned_irf_forms', verbose_name='Attach scanned copy of form (pdf or image)')),
                ('form_entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='irfsouthafrica_entered_by', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataentry.BorderStation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='intercepteesouthafrica',
            name='interception_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptees', to='dataentry.IrfSouthAfrica'),
        ),
        migrations.AddField(
            model_name='intercepteesouthafrica',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataentry.Person'),
        ),


        #migrations.RunPython(ensure_countries),
        #migrations.RunPython(unload_prior),
        #migrations.RunPython(load_fixture),
    ]

